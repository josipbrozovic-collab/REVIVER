<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Organizations Directory — REVIVER style</title>
  <meta name="color-scheme" content="light only" />
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    /* 1) Global color variables — replace values after reviewing reviver-project.eu */
    :root{
      --brand-primary:#2E7D32;        /* primarna zelena (linkovi, gumbi) */
      --brand-primary-600:#1B5E20;    /* tamnija zelena (hover, obrub) */
      --brand-primary-50:#E8F5E9;     /* vrlo svijetla zelena (isticanja) */
      --brand-accent:#F59E0B;         /* akcent (npr. oznake) */
      --brand-neutral-900:#0F172A;    /* glavni tamni tekst */
      --brand-neutral-600:#475569;    /* sekundarni tekst/obrubi */
      --brand-neutral-50:#F8FAFC;     /* lagana neutralna pozadina */
      --focus:#1D4ED8;                /* fokus prsten (kontrastan, vidljiv) */
    }

    /* 2) Typography and focus basics */
    html, body { height: 100%; }
    body{
      font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji","Segoe UI Emoji", "Segoe UI Symbol";
      color: var(--brand-neutral-900);
      line-height: 1.55; /* između 1.4 i 1.6 */
      background:
        radial-gradient(1200px 800px at 10% -10%, var(--brand-primary-50), transparent 60%),
        radial-gradient(1000px 700px at 100% 0%, var(--brand-neutral-50), transparent 50%),
        #ffffff;
    }
    *:focus-visible{
      outline: 3px solid var(--focus);
      outline-offset: 2px; /* requested 2px offset */
      border-radius: 6px;
    }
    *::selection{
      background: color-mix(in oklab, var(--brand-primary) 24%, white);
      color: var(--brand-neutral-900);
    }
    * { accent-color: var(--brand-primary); }

    /* 3) Links and headings */
    a{ color: var(--brand-primary); text-decoration-color: color-mix(in oklab, var(--brand-primary) 32%, transparent); text-underline-offset: 3px; }
    a:hover{ color: var(--brand-primary-600); text-decoration-color: var(--brand-primary-600); }
    h1,h2,h3{ color: var(--brand-neutral-900); }

    /* 4) Cards */
    .card{
      background: #ffffff;
      border: 1px solid color-mix(in oklab, var(--brand-neutral-600) 12%, transparent);
      border-radius: 16px;
      box-shadow: 0 6px 14px -6px color-mix(in oklab, var(--brand-neutral-600) 18%, transparent);
      transition: border-color .2s ease, box-shadow .2s ease, transform .2s ease;
    }
    .card:hover{
      border-color: var(--brand-primary-600);
      box-shadow: 0 10px 22px -10px color-mix(in oklab, var(--brand-primary-600) 40%, transparent);
      transform: translateY(-2px);
    }

    /* 5) Buttons */
    .btn{
      display: inline-flex; align-items: center; justify-content: center;
      gap:.5rem; border-radius: .75rem; font-weight: 600;
      padding: .6rem .95rem;
      transition: background-color .2s ease, color .2s ease, border-color .2s ease, transform .06s ease;
      border: 1px solid transparent;
    }
    .btn:active{ transform: translateY(1px); }
    .btn-primary{
      background: var(--brand-primary);
      color: #fff;
    }
    .btn-primary:hover{ background: var(--brand-primary-600); }
    .btn-soft{
      background: color-mix(in oklab, var(--brand-primary-50) 30%, white);
      color: var(--brand-primary);
      border-color: color-mix(in oklab, var(--brand-primary) 30%, transparent);
    }
    /* "Details" hover uses --brand-primary-600 for border and background */
    .btn-soft:hover{
      background: var(--brand-primary-600);
      color:#fff;
      border-color: var(--brand-primary-600);
    }
    .btn-outline{
      background: transparent;
      border-color: color-mix(in oklab, var(--brand-neutral-600) 35%, transparent);
      color: var(--brand-neutral-900);
    }
    .btn-outline:hover{
      border-color: var(--brand-primary);
      color: var(--brand-primary);
      background: color-mix(in oklab, var(--brand-primary-50) 50%, white);
    }
    .chip{
      display:inline-flex; align-items:center; gap:.5rem;
      padding:.35rem .6rem; border-radius:999px; font-weight:600;
      color: var(--brand-primary); background: color-mix(in oklab, var(--brand-primary-50) 65%, white);
      border:1px solid color-mix(in oklab, var(--brand-primary) 35%, transparent);
    }
    .chip button{ color: inherit; }

    /* 6) Toolbar */
    .toolbar{
      background: var(--brand-neutral-50);
      border: 1px solid color-mix(in oklab, var(--brand-neutral-600) 20%, transparent);
      border-radius: 14px;
    }
    .input{
      width:100%; border-radius: .75rem; padding:.65rem .85rem;
      border: 1px solid color-mix(in oklab, var(--brand-neutral-600) 28%, transparent);
      background: #fff; color: var(--brand-neutral-900);
      transition: border-color .2s ease, box-shadow .2s ease;
    }
    .input::placeholder{ color: color-mix(in oklab, var(--brand-neutral-600) 55%, white); }
    .input:hover{ border-color: color-mix(in oklab, var(--brand-neutral-600) 45%, transparent); }
    .input:focus{ border-color: var(--brand-primary); box-shadow: 0 0 0 3px color-mix(in oklab, var(--brand-primary) 20%, transparent); }

    /* 7) Text clamping (card description) */
    .line-clamp-3{
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    /* 8) Pagination */
    .pagination a, .pagination button{
      min-width: 2.5rem; height: 2.5rem; padding: 0 .25rem;
      display:inline-flex; align-items:center; justify-content:center;
      border-radius: .65rem; border: 1px solid color-mix(in oklab, var(--brand-neutral-600) 25%, transparent);
      color: var(--brand-neutral-900); background: #fff;
      transition: background-color .2s ease, color .2s ease, border-color .2s ease, transform .06s ease;
      font-weight: 600;
    }
    .pagination a:hover, .pagination button:hover{
      border-color: var(--brand-primary);
      color: var(--brand-primary);
      background: color-mix(in oklab, var(--brand-primary-50) 50%, white);
    }
    .pagination .active{
      background: var(--brand-primary);
      color: #fff; border-color: var(--brand-primary);
    }
    .pagination .disabled{
      opacity: .5; pointer-events: none;
    }

    /* 9) AA kontrast pomoćno — pažljivo birane nijanse iz varijabli */
  </style>
</head>
<body>
  <main class="max-w-6xl mx-auto px-5 sm:px-6 lg:px-8 py-10">
    <header class="mb-8">
      <div class="inline-flex items-center gap-2 px-3 py-1 rounded-full"
           style="background: color-mix(in oklab, var(--brand-primary-50) 65%, white); color: var(--brand-primary); border:1px solid color-mix(in oklab, var(--brand-primary) 30%, transparent)">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
          <path d="M12 2a6 6 0 0 1 6 6c0 1.67-.69 3.18-1.8 4.26A8.96 8.96 0 0 1 20 20H4a8.96 8.96 0 0 1 3.8-7.74A5.98 5.98 0 0 1 6 8a6 6 0 0 1 6-6zm0 2a4 4 0 0 0-2.65 7.01c.2.18.33.43.35.7V12h4.6v-.29c.02-.27.15-.52.35-.7A4 4 0 0 0 12 4zM6.46 18h11.08a6.96 6.96 0 0 0-11.08 0z"/>
        </svg>
        <span class="text-sm font-semibold">Organizations Directory</span>
      </div>
      <h1 class="text-3xl sm:text-4xl font-extrabold mt-3 tracking-tight">REVIVER — umbrella organizations directory</h1>
      <p class="mt-2 text-[0.98rem]" style="color: var(--brand-neutral-600)">
        Search organizations by name, description or country. 
      </p>
    </header>

    <!-- Toolbar: search + country filter in a single bar -->
    <form id="toolbarForm" class="toolbar p-4 sm:p-5 mb-6" role="search" aria-label="Search and filter">
      <div class="flex flex-col md:flex-row gap-3 md:gap-4 items-stretch">
        <div class="flex-1">
          <label for="searchInput" class="block text-sm font-semibold mb-1">Search</label>
          <input id="searchInput" name="q" class="input" type="search" placeholder="Type a name, description, email or website..."
                 autocomplete="off" />
        </div>
        <div class="w-full md:w-64">
          <label for="countrySelect" class="block text-sm font-semibold mb-1">Country</label>
          <select id="countrySelect" name="country" class="input">
            <option value="">All countries</option>
          </select>
        </div>
        <div class="flex gap-2 md:self-end">
          <button type="submit" class="btn btn-primary" aria-label="Run search">
            Search
          </button>
          <button type="button" id="clearBtn" class="btn btn-outline" aria-label="Clear all filters">
            Clear
          </button>
        </div>
      </div>
      <div class="mt-3 flex flex-wrap gap-2 items-center" id="activeFilters" aria-live="polite" aria-atomic="true"></div>
    </form>

    <!-- Status rezultata -->
    <div class="mb-4 flex items-center justify-between gap-3">
      <p id="resultsCount" class="text-sm font-semibold"
         style="color: var(--brand-neutral-600)" aria-live="polite" aria-atomic="true">
        Loading results…
      </p>
      <!-- Reserved for future options (sorting) -->
    </div>

    <!-- Mreža kartica 1–3 stupca -->
    <section aria-label="Search results">
      <div id="grid" class="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 gap-5">
        <!-- Cards are added once and then shown/hidden dynamically -->
      </div>
      <p id="noResults" class="mt-8 text-center text-sm font-semibold hidden"
         style="color: var(--brand-neutral-600)">
        No results match your search or filters. Try broadening your query.
      </p>

      <!-- Paginacija -->
      <nav id="pagination" class="pagination mt-8 flex flex-wrap items-center justify-center gap-2"
           aria-label="Results pagination">
        <!-- Buttons are rendered dynamically -->
      </nav>
    </section>


  </main>

  <script>
    // --- Demo podaci (2 organizacije) ---
    const organizations = [
      {
        id: 1,
        name: "Pannonia consulting",
        scope: "Pannonia Consulting operates at the intersection of education, sustainable development, and international cooperation. Its scope includes designing, managing, and evaluating EU-funded projects particularly in the fields of vocational education and training (VET), green skills development, and inclusion of marginalized communities. The organization works both locally in Croatia and internationally across Europe and Sub-Saharan Africa, supporting capacity-building initiatives, curriculum development, and multi-stakeholder partnerships",
        email: "info@pannonia-consluting.hr",
        web: "www.pannonia-consulting.hr",
        country: "Croatia",
        address: ""
      },
      {
        id: 2,
        name: "Pučko otvoreno učilište Auto moto centar Nova Gradiška",
        scope: "Pučko otvoreno učilište AMC Nova Gradiška is a certified adult education provider in Croatia, offering formal and non-formal education programs with a focus on vocational training and lifelong learning. The institution delivers qualifications relevant to rural development, including agricultural machinery operation and retraining for green jobs. With strong regional outreach and flexible course delivery, POU AMC supports inclusive access to skills for adults from various socio-economic backgrounds. In the REVIVER project, its scope aligns with the development of regenerative agriculture curricula and capacity-building initiatives. The organization will contribute to the creation of practical training pathways and support the engagement of local stakeholders in the umbrella network.",
        email: "info@pou-amc.hr",
        web: "www.pou-amc.hr",
        country: "Croatia",
        address: ""
      }
    ];

    // --- Pomoćne funkcije ---
    const normalizeUrl = (url) => {
      if (!url) return "";
      const trimmed = url.trim();
      if (/^https?:\/\//i.test(trimmed)) return trimmed;
      return "https://" + trimmed.replace(/^\/+/, "");
    };
    const fold = (s) => (s || "")
      .toString()
      .normalize("NFD")
      .replace(/[\u0300-\u036f]/g, "")
      .toLowerCase();

    // --- Inicijalizacija ---
    const state = {
      pageSize: 6,
      currentPage: 1,
      filteredIds: [],
      country: "",
      query: ""
    };

    const els = {
      grid: document.getElementById("grid"),
      resultsCount: document.getElementById("resultsCount"),
      noResults: document.getElementById("noResults"),
      pagination: document.getElementById("pagination"),
      searchInput: document.getElementById("searchInput"),
      countrySelect: document.getElementById("countrySelect"),
      toolbarForm: document.getElementById("toolbarForm"),
      clearBtn: document.getElementById("clearBtn"),
      activeFilters: document.getElementById("activeFilters")
    };

    // Napuni listu zemalja iz podataka
    function populateCountries() {
      const set = new Set(organizations.map(o => o.country).filter(Boolean));
      const list = Array.from(set).sort((a,b)=>a.localeCompare(b, 'hr'));
      for (const c of list) {
        const opt = document.createElement("option");
        opt.value = c;
        opt.textContent = c;
        els.countrySelect.appendChild(opt);
      }
    }

    // Kreiraj kartice jednom (zatim ćemo ih samo skrivati/prikazivati)
    const cardRefs = new Map();

    function createCard(org) {
      const card = document.createElement("article");
      card.className = "card p-5 flex flex-col";
      card.setAttribute("data-id", org.id);
      card.setAttribute("tabindex", "-1"); // za pomak fokusa na otvaranje detalja

      const website = normalizeUrl(org.web);

      card.innerHTML = `
        <div class="flex items-start justify-between gap-3">
          <h3 class="text-xl font-extrabold leading-tight">${org.name}</h3>
          <span class="px-2 py-1 rounded-md text-xs font-bold"
                style="color: var(--brand-primary); background: color-mix(in oklab, var(--brand-primary-50) 65%, white); border:1px solid color-mix(in oklab, var(--brand-primary) 35%, transparent);">
            ${org.country || "—"}
          </span>
        </div>

        <p class="mt-3 text-[0.98rem] line-clamp-3" style="color: var(--brand-neutral-600)">${org.scope}</p>

        <div class="mt-4 grid grid-cols-1 gap-2 text-[0.96rem]">
          ${org.email ? `
            <div class="flex items-center gap-2">
              <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 24 24"><path d="M20 4H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 2v.01L12 13 4 6.01V6h16ZM4 18V8.236l7.4 5.55a1 1 0 0 0 1.2 0L20 8.236V18H4Z"/></svg>
              <a class="font-semibold" href="mailto:${org.email}">${org.email}</a>
            </div>` : ""}

          ${website ? `
            <div class="flex items-center gap-2">
              <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2a10 10 0 1 1 0 20 10 10 0 0 1 0-20Zm-.5 2.54c-2.22.23-4.1 1.53-5.15 3.35h5.15V4.54Zm1 0V8h5.15c-1.05-1.82-2.93-3.12-5.15-3.46ZM4.54 11.5h3.46c.05-1.02.22-2 .49-2.93H5.35a7.47 7.47 0 0 0-.81 2.93ZM9.03 12.5c-.07.95-.24 1.93-.53 2.93H5.35c.16 1.05.55 2.03 1.14 2.9h3.21c.44-.93.73-1.93.87-2.9h-1.54Zm1.47 0v2.9c.33 1.95.93 3.57 1.53 4.52.6-.95 1.2-2.57 1.53-4.52v-2.9h-3.06Zm4.47 0c-.14.97-.43 1.97-.87 2.9h3.21c.59-.87.98-1.85 1.14-2.9h-3.48Zm3.48-1h-3.48c-.27-.93-.44-1.91-.49-2.93h3.46c.4.9.66 1.9.81 2.93Z"/></svg>
              <a class="font-semibold" href="${website}" target="_blank" rel="noopener noreferrer">${org.web}</a>
            </div>` : ""}
        </div>

        <div class="mt-5 flex flex-wrap gap-2">
          <button type="button" class="btn btn-soft" aria-expanded="false" aria-controls="details-${org.id}" data-action="toggle-details">
            Details
          </button>
        </div>

        <div id="details-${org.id}" class="mt-4 hidden">
          <div class="p-4 rounded-lg"
               style="background: color-mix(in oklab, var(--brand-neutral-50) 80%, white); border:1px solid color-mix(in oklab, var(--brand-neutral-600) 20%, transparent)">
            <p class="text-[0.98rem]" style="color: var(--brand-neutral-900)">${org.scope}</p>
            ${org.address ? `<p class="mt-3 text-[0.95rem]" style="color: var(--brand-neutral-600)">${org.address}</p>` : ""}
          </div>
        </div>
      `;

      // Toggle detalja
      const toggleBtn = card.querySelector('[data-action="toggle-details"]');
      const details = card.querySelector(`#details-${org.id}`);
      toggleBtn.addEventListener("click", () => {
        const isOpen = !details.classList.contains("hidden");
        if (isOpen) {
          details.classList.add("hidden");
          toggleBtn.setAttribute("aria-expanded", "false");
          toggleBtn.textContent = "Details";
        } else {
          details.classList.remove("hidden");
          toggleBtn.setAttribute("aria-expanded", "true");
          toggleBtn.textContent = "Hide";
          // pomak fokusa na članak za okvir fokusa, ne mijenjamo scroll
          card.focus({ preventScroll: true });
        }
      });

      return card;
    }

    function buildCardsOnce() {
      for (const org of organizations) {
        const node = createCard(org);
        cardRefs.set(org.id, node);
        els.grid.appendChild(node);
      }
    }

    // Filtriranje i paginacija (selektivno prikazivanje)
    function applyFilters() {
      const q = fold(state.query);
      const country = state.country;

      const ids = [];
      for (const org of organizations) {
        const hay = `${org.name} ${org.scope} ${org.email} ${org.web} ${org.country}`;
        const matchQ = !q || fold(hay).includes(q);
        const matchC = !country || org.country === country;
        if (matchQ && matchC) ids.push(org.id);
      }
      state.filteredIds = ids;
      state.currentPage = 1;
      renderActiveFilters();
      updateResultsCount();
      renderPagination();
      showPage(state.currentPage);
    }

    function updateResultsCount() {
      const total = organizations.length;
      const filtered = state.filteredIds.length;
      const from = filtered === 0 ? 0 : (state.currentPage - 1) * state.pageSize + 1;
      const to = Math.min(filtered, state.currentPage * state.pageSize);
      els.resultsCount.textContent = filtered === total
        ? `Showing ${filtered} od ${total} organizations`
        : `Showing ${from}–${to} od ${filtered} filtriranih (ukupno ${total})`;
      els.noResults.classList.toggle("hidden", filtered !== 0);
    }

    function renderActiveFilters() {
      els.activeFilters.innerHTML = "";
      if (state.country) {
        const chip = document.createElement("span");
        chip.className = "chip";
        chip.innerHTML = `
          Zemlja: ${state.country}
          <button type="button" title="Ukloni filter" aria-label="Ukloni filter zemlja">
            ✕
          </button>`;
        chip.querySelector("button").addEventListener("click", () => {
          state.country = "";
          els.countrySelect.value = "";
          applyFilters();
          els.searchInput.focus();
        });
        els.activeFilters.appendChild(chip);
      }
      if (fold(state.query)) {
        const chipQ = document.createElement("span");
        chipQ.className = "chip";
        chipQ.innerHTML = `
          Pojam: “${state.query}”
          <button type="button" title="Ukloni pojam" aria-label="Ukloni pojam pretrage">
            ✕
          </button>`;
        chipQ.querySelector("button").addEventListener("click", () => {
          state.query = "";
          els.searchInput.value = "";
          applyFilters();
          els.searchInput.focus();
        });
        els.activeFilters.appendChild(chipQ);
      }
    }

    function renderPagination() {
      const count = state.filteredIds.length;
      const pages = Math.max(1, Math.ceil(count / state.pageSize));

      const makeBtn = (label, page, disabled = false, active = false) => {
        const el = document.createElement("button");
        el.type = "button";
        el.textContent = label;
        el.className = active ? "active" : "";
        if (disabled) el.classList.add("disabled");
        el.addEventListener("click", () => showPage(page));
        return el;
      };

      const nav = document.createDocumentFragment();
      const prev = makeBtn("«", Math.max(1, state.currentPage - 1), state.currentPage === 1);
      nav.appendChild(prev);

      // Ograniči broj vidljivih gumbi (iako je dataset mali)
      for (let p = 1; p <= pages; p++) {
        const a = document.createElement("a");
        a.href = "#"; a.textContent = String(p);
        if (p === state.currentPage) a.classList.add("active");
        a.addEventListener("click", (e) => { e.preventDefault(); showPage(p); });
        nav.appendChild(a);
      }

      const next = makeBtn("»", Math.min(pages, state.currentPage + 1), state.currentPage === pages);
      nav.appendChild(next);

      els.pagination.innerHTML = "";
      els.pagination.appendChild(nav);
    }

    function showPage(page) {
      state.currentPage = page;
      const ids = state.filteredIds;
      const start = (page - 1) * state.pageSize;
      const end = start + state.pageSize;
      const visibleIds = new Set(ids.slice(start, end));

      // Selektivno prikaži/sakrij kartice
      for (const [id, node] of cardRefs.entries()) {
        const show = visibleIds.has(id);
        node.style.display = show ? "" : "none";
      }

      updateResultsCount();
      renderPagination();
    }

    // Eventi
    els.toolbarForm.addEventListener("submit", (e) => {
      e.preventDefault();
      state.query = els.searchInput.value.trim();
      state.country = els.countrySelect.value;
      applyFilters();
    });
    els.searchInput.addEventListener("input", () => {
      state.query = els.searchInput.value.trim();
      applyFilters();
    });
    els.countrySelect.addEventListener("change", () => {
      state.country = els.countrySelect.value;
      applyFilters();
    });
    els.clearBtn.addEventListener("click", () => {
      els.searchInput.value = "";
      els.countrySelect.value = "";
      state.query = "";
      state.country = "";
      applyFilters();
      els.searchInput.focus();
    });

    // Start
    populateCountries();
    buildCardsOnce();
    // inicijalni prikaz
    state.filteredIds = organizations.map(o => o.id);
    applyFilters();
  </script>

  <!-- JSON-LD (Organization) -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@graph": [
      {
        "@type": "Organization",
        "@id": "https://example.org/org/1",
        "name": "Pannonia consulting",
        "description": "Pannonia Consulting operates at the intersection of education, sustainable development, and international cooperation. Its scope includes designing, managing, and evaluating EU-funded projects particularly in the fields of vocational education and training (VET), green skills development, and inclusion of marginalized communities. The organization works both locally in Croatia and internationally across Europe and Sub-Saharan Africa, supporting capacity-building initiatives, curriculum development, and multi-stakeholder partnerships",
        "email": "mailto:info@pannonia-consluting.hr",
        "url": "https://www.pannonia-consulting.hr",
        "address": {
          "@type": "PostalAddress",
          "addressCountry": "Croatia"
        }
      },
      {
        "@type": "Organization",
        "@id": "https://example.org/org/2",
        "name": "Pučko otvoreno učilište Auto moto centar Nova Gradiška",
        "description": "Pučko otvoreno učilište AMC Nova Gradiška is a certified adult education provider in Croatia, offering formal and non-formal education programs with a focus on vocational training and lifelong learning. The institution delivers qualifications relevant to rural development, including agricultural machinery operation and retraining for green jobs. With strong regional outreach and flexible course delivery, POU AMC supports inclusive access to skills for adults from various socio-economic backgrounds. In the REVIVER project, its scope aligns with the development of regenerative agriculture curricula and capacity-building initiatives. The organization will contribute to the creation of practical training pathways and support the engagement of local stakeholders in the umbrella network.",
        "email": "mailto:info@pou-amc.hr",
        "url": "https://www.pou-amc.hr",
        "address": {
          "@type": "PostalAddress",
          "addressCountry": "Croatia"
        }
      }
    ]
  }
  </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'981785a1a474ec22',t:'MTc1ODI2ODUzOS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
